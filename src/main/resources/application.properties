# 这里要注册所有的数据源
spring.shardingsphere.datasource.names=ds0,ds1

# 这是数据源0的配置
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/db_0?serverTimezone=GMT%B8
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=000000

# 这是数据源1的配置
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3307/db_1?serverTimezone=GMT%B8
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=000000

# 分库策略
# 分库的列是user_id
spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=org.consistenthash.dbsharding.db.rmdb.algo.PreciseShardingAlgorithmImpl

# 分表策略
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

spring.shardingsphere.sharding.binding-tables=t_order, t_order_item

# 广播表, 其主节点是ds0
spring.shardingsphere.sharding.broadcast-tables=t_config
spring.shardingsphere.sharding.tables.t_config.actual-data-nodes=ds$->{0}.t_config
spring.main.allow-bean-definition-overriding=true

##mybatis配置
##Mybatis mapper.xml檔案位置
#mybatis.mapper-locations=classpath:org/consistenthash/dbsharding/db/rmdb/mapper/*Mapper.xml
##設定這個以後再Mapper.xml檔案中在parameterType的值就不用寫成全路徑名了,可以寫成parameterType = "User"
#mybatis.type-aliases-package=org.consistenthash.dbsharding.db.rmdb.entity
## 駝峰命名規範 如：資料庫欄位是order_id,那麼實體欄位就要寫成orderId
#mybatis.configuration.map-underscore-to-camel-case=true

mybatis-plus.configuration.map-underscore-to-camel-case: true
mybatis-plus.configuration.cache-enabled: false
mybatis-plus.configuration.localCacheScope: STATEMENT
mybatis-plus.dbsharding.type-enums-package: org.consistenthash.dbsharding.enums
mybatis-plus.dbsharding.type-aliases-package: org.consistenthash.dbsharding.db.rmdb.entity
mybatis-plus.dbsharding.mapper-locations: classpath:org/consistenthash/dbsharding/db/rmdb/mapper/*Mapper.xml

spring.jpa.show-sql=true
#server.address=10.1.20.96
server.port=8080